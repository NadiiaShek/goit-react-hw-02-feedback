{"ast":null,"code":"var _jsxFileName = \"/Users/nadiia/Documents/GitHub/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx\";\nimport React from 'react';\nimport { Item, Box } from './statistics.styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    state,\n    total,\n    feedback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Item, {\n      children: [\"good:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: state.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      children: [\"neutral:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: state.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      children: [\"bad:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: state.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      children: [\"Total:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: total()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      children: [\"Positive feedback:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [feedback(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx"],"names":["React","Item","Box","PropTypes","Statistics","state","total","feedback","good","neutral","bad","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,qBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAA+B;AACxD,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,IAAD;AAAA,uCACO;AAAA,kBAAOF,KAAK,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,cADP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAA,0CACU;AAAA,kBAAOH,KAAK,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,IAAD;AAAA,sCACM;AAAA,kBAAOJ,KAAK,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,cADN;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,IAAD;AAAA,wCACQ;AAAA,kBAAOJ,KAAK;AAAZ;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,IAAD;AAAA,oDAEE;AAAA,mBAAOC,QAAQ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBM;KAAMH,U;AAsBbA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,KAAK,EAAEF,SAAS,CAACS,KAAV,CAAgB;AACrBJ,IAAAA,IAAI,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UADF;AAErBL,IAAAA,OAAO,EAAEN,SAAS,CAACU,MAAV,CAAiBC,UAFL;AAGrBJ,IAAAA,GAAG,EAAEP,SAAS,CAACU,MAAV,CAAiBC;AAHD,GAAhB;AADc,CAAvB","sourcesContent":["import React from 'react';\nimport { Item, Box } from './statistics.styled';\nimport PropTypes from 'prop-types';\n\nexport const Statistics = ({ state, total, feedback }) => {\n  return (\n    <Box>\n      <Item>\n        good:<span>{state.good}</span>\n      </Item>\n      <Item>\n        neutral:<span>{state.neutral}</span>\n      </Item>\n      <Item>\n        bad:<span>{state.bad}</span>\n      </Item>\n      <Item>\n        Total:<span>{total()}</span>\n      </Item>\n      <Item>\n        Positive feedback:\n        <span>{feedback()}%</span>\n      </Item>\n    </Box>\n  );\n};\nStatistics.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n};"]},"metadata":{},"sourceType":"module"}